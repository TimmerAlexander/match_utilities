# dhcpd.conf
#
# Sample configuration file for ISC dhcpd
#
# Attention: If /etc/ltsp/dhcpd.conf exists, that will be used as
# configuration file instead of this file.
#

# option definitions common to all supported networks...
#option domain-name "example.org";
#option domain-name-servers ns1.example.org, ns2.example.org;

ddns-updates on;
ddns-update-style interim;
update-static-leases on;
authoritative;
key "rndc-key" {
        algorithm hmac-sha256;
        secret "rRltbdcXukPOqTGo5p04cx0+UGLomJ0FiKLhDraxLzY=";
};
allow unknown-clients;
use-host-decl-names on;
log-facility local7;
use-host-decl-names on;


default-lease-time 86400;
max-lease-time 86400;

zone match-local.intern. {
    primary localhost; # This server is the primary DNS server for the zone
    key rndc-key; # Use the key we defined earlier for dynamic updates
    }
zone 8.145.10.in-addr.arpa. {
    primary localhost; # This server is the primary DNS server for the zone
    key rndc-key; # Use the key we defined earlier for dynamic updates
    }

subnet 10.145.8.0 netmask 255.255.255.0 {
    range 10.145.8.100 10.145.8.220;
    option subnet-mask 255.255.255.0;
    option routers 10.145.8.250;
    option domain-name-servers 10.145.8.249;
    option domain-name "match-local.intern";
    ddns-domainname "match-local.intern.";
    ddns-rev-domainname "in-addr.arpa.";
    do-forward-updates on;
    option ntp-servers time1.uni-hannover.de;
}

host AP1.match-local.intern {
	hardware ethernet D0:21:F9:60:1E:E3;
	fixed-address 10.145.8.248;
	ddns-hostname "AP1";
}

host RocketM5.match-local.intern {
	hardware ethernet 04:18:D6:CC:5E:E1;
	fixed-address 10.145.8.10;
	ddns-hostname "RocketM5";
}

host MuR_airlan.match-local.intern {
	hardware ethernet 04:18:D6:EA:19:71;
	fixed-address 10.145.8.12;
	ddns-hostname "mur_airlan";
} 

host miranda.match-local.intern {
	hardware ethernet 04:18:D6:EA:19:62;
	fixed-address 10.145.8.11;
	ddns-hostname "miranda_airlan";
}

host masterSPS.match-local.intern {
	hardware ethernet AC:64:17:43:1C:F7;
	fixed-address 10.145.8.20;
	ddns-hostname "masterSPS";
}

host murSPS.match-local.intern {
	hardware ethernet 04:18:D6:EA:19:62;
	fixed-address 10.145.8.22;
	ddns-hostname "masterSPS";
}

host mirandaSPS.match-local.intern {
	hardware ethernet 04:18:D6:EA:19:71;
	fixed-address 10.145.8.21;
	ddns-hostname "masterSPS";
}

host spotSPS.match-local.intern {
	hardware ethernet 00:00:00:00:00:01;
	fixed-address 10.145.8.23;
	ddns-hostname "spotSPS";
}

host mobileSPS.match-local.intern {
	hardware ethernet 00:00:00:00:00:02;
	fixed-address 10.145.8.24;
	ddns-hostname "mobileSPS";
}

host miranda_usb_ethernet.match-local.intern {
	hardware ethernet 00:50:B6:FF:E4:5F;
	fixed-address 10.145.8.31;
	ddns-hostname "miranda_usb_ethernet";
}

host moble_master_ethernet.match-local.intern {
	hardware ethernet 90:1B:0E:4A:18:25;
	fixed-address 10.145.8.32;
	ddns-hostname "moble_master_ethernet";
}

host master_ethernet.match-local.intern {
	hardware ethernet D8:BB:C1:37:BE:C4;
	fixed-address 10.145.8.30;
	ddns-hostname "master_ethernet";
}

host mur_ethernet.match-local.intern {
	hardware ethernet 00:D8:61:6E:7B:AE;
	fixed-address 10.145.8.33;
	ddns-hostname "mur_ethernet";
}

host fritz_box.match-local.intern {
	hardware ethernet 2C:91:AB:49:89:2C;
	fixed-address 10.145.8.1;
	ddns-hostname "fritz_box";
}


host mir200_robot_controller.match-local.intern {
	hardware ethernet 34:41:5D:16:8A:7D;
	fixed-address 10.145.8.34;
	ddns-hostname "mir200_robot_controller";
}


host mir100_robot_controller.match-local.intern {
	hardware ethernet 00:0E:8E:98:48:2F;
	fixed-address 10.145.8.35;
	ddns-hostname "mir200_robot_controller";
}

host spot_airlan.match-local.intern {
	hardware ethernet F4:92:BF:BE:0F:8B;
	fixed-address 10.145.8.36;
	ddns-hostname "spot_airlan";
}

host scout1_airlan.match-local.intern {
	hardware ethernet 04:18:D6:EA:1A:BF;
	fixed-address 10.145.8.37;
	ddns-hostname "scout1_airlan";
}

host spot_ethernet.match-local.intern {
	hardware ethernet 18:C0:4D:EE:33:E8;
	fixed-address 10.145.8.38;
	ddns-hostname "spot_ethernet";
}

host Keyence_PC_ethernet.match-local.intern {
        hardware ethernet E8:4E:06:91:24:50;
        fixed-address 10.145.8.39;
        ddns-hostname "Keyence_PC_ethernet";
}


# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
# ddns-update-style none;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
#authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
#log-facility local7;

# No service will be given on this subnet, but declaring it helps the 
# DHCP server to understand the network topology.

#subnet 10.152.187.0 netmask 255.255.255.0 {
#}

# This is a very basic subnet declaration.

#subnet 10.254.239.0 netmask 255.255.255.224 {
#  range 10.254.239.10 10.254.239.20;
#  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
#}

# This declaration allows BOOTP clients to get dynamic addresses,
# which we don't really recommend.

#subnet 10.254.239.32 netmask 255.255.255.224 {
#  range dynamic-bootp 10.254.239.40 10.254.239.60;
#  option broadcast-address 10.254.239.31;
#  option routers rtr-239-32-1.example.org;
#}

# A slightly different configuration for an internal subnet.
#subnet 10.5.5.0 netmask 255.255.255.224 {
#  range 10.5.5.26 10.5.5.30;
#  option domain-name-servers ns1.internal.example.org;
#  option domain-name "internal.example.org";
#  option subnet-mask 255.255.255.224;
#  option routers 10.5.5.1;
#  option broadcast-address 10.5.5.31;
#  default-lease-time 600;
#  max-lease-time 7200;
#}

# Hosts which require special configuration options can be listed in
# host statements.   If no address is specified, the address will be
# allocated dynamically (if possible), but the host-specific information
# will still come from the host declaration.

#host passacaglia {
#  hardware ethernet 0:0:c0:5d:bd:95;
#  filename "vmunix.passacaglia";
#  server-name "toccata.example.com";
#}

# Fixed IP addresses can also be specified for hosts.   These addresses
# should not also be listed as being available for dynamic assignment.
# Hosts for which fixed IP addresses have been specified can boot using
# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
# be booted with DHCP, unless there is an address range on the subnet
# to which a BOOTP client is connected which has the dynamic-bootp flag
# set.
#host fantasia {
#  hardware ethernet 08:00:07:26:c0:a5;
#  fixed-address fantasia.example.com;
#}

# You can declare a class of clients and then do address allocation
# based on that.   The example below shows a case where all clients
# in a certain class get addresses on the 10.17.224/24 subnet, and all
# other clients get addresses on the 10.0.29/24 subnet.

#class "foo" {
#  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
#}

#shared-network 224-29 {
#  subnet 10.17.224.0 netmask 255.255.255.0 {
#    option routers rtr-224.example.org;
#  }
#  subnet 10.0.29.0 netmask 255.255.255.0 {
#    option routers rtr-29.example.org;
#  }
#  pool {
#    allow members of "foo";
#    range 10.17.224.10 10.17.224.250;
#  }
#  pool {
#    deny members of "foo";
#    range 10.0.29.10 10.0.29.230;
#  }
#}
